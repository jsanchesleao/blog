#!/usr/bin/env bash

basePath=$BLOG_REPO_DIR

function show_help() {
  echo "Usage: blog [edit|add|push|publish|serve]"
}

function do_edit() {
  drafts=$(echo_drafts)
  if [ ! -z "$1" ]; then
    drafts=$(echo "$drafts" | grep "$1")
  fi
  if [ -z "$drafts" ]; then
    echo "There are no drafts. To create one, please run blog new"
  fi
  edit=""
  for draft in $drafts; do
    if [ -z "$edit" ]; then
      edit="$draft"
    else
      edit=$(echo "$drafts" | fzf)
    fi
  done
  if [ -z "$edit" ];then
    echo "No draft selected"
    exit 1
  fi
  nvim "$edit"
}

function echo_drafts() {
  posts=$(find "$basePath/src/posts" -name '*.md')
  for p in $posts; do
    head $p | grep -q 'draft: true'
    if [ $? -eq "0" ]; then
      echo $p
    fi
  done
}

function do_add() {
  read -p "Post name: " name
  sanitizedName=$(echo -e "$name" | tr -d "\n" | tr '[:space:]' '_')
  path="$basePath/src/posts/_draft_$sanitizedName.md"
  if [ -f "$path" ]; then
    echo "A draft with this name already exists"
    exit 1
  fi
  echo "---
title: $name
draft: true
---

# $name
#### $name
" > "$path"
  echo "Draft $path is created"
  echo "Run blog edit to open it on an editor"
}

function do_publish() {
  drafts=$(echo_drafts)
  if [ ! -z "$1" ]; then
    drafts=$(echo "$drafts" | grep "$1")
  fi
  if [ -z "$drafts" ]; then
    echo "There are no drafts or the filter did not match anything. To create one, please run blog new"
  fi
  post=""
  for draft in $drafts; do
    if [ -z "$edit" ]; then
      post="$draft"
    else
      post=$(echo "$drafts" | fzf)
    fi
  done
  if [ -z "$post" ];then
    echo "No draft selected"
    exit 1
  fi
  publishedName=$(echo $post | sed "s/_draft/$(date +%Y-%m-%d)/")

  cat $post | sed "s/draft: true/draft: false\ndate: $(date +%Y-%m-%d)/" > $publishedName
  rm "$post"
  file=$(basename $publishedName)
  echo "$file successfully published"
  echo "To update online blog content, please run blog push"
}

function do_push() {
  cd $basePath
  git add .
  git commit
  git pull
  git push
  yarn push
}

function do_serve() {
  cd $basePath
  yarn
  yarn serve
}


case "$1" in
  edit)
    do_edit $2
    ;;
  add)
    do_add $2
    ;;
  publish)
    do_publish $2
    ;;
  push)
    do_push
    ;;
  serve)
    do_serve
    ;;
  *)
    show_help
    ;;
esac
